// Code generated by protoc-gen-go. DO NOT EDIT.
// source: madridmas.proto

/*
Package madridmas_proto is a generated protocol buffer package.

It is generated from these files:
	madridmas.proto

It has these top-level messages:
	Incident
	CreateIncidentRequest
	CreateIncidentResponse
	ListIncidentstRequest
	ListIncidentsResponse
*/
package madridmas_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Incident struct {
	// latitude is part of the incident location.
	Latitude *float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	// longitude is part of the incident location.
	Longitude *float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	// title of the incident as the user believes should be named.
	Title *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// description is the user description in text for
	// the incident reported.
	Description      *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Incident) Reset()                    { *m = Incident{} }
func (m *Incident) String() string            { return proto.CompactTextString(m) }
func (*Incident) ProtoMessage()               {}
func (*Incident) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Incident) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *Incident) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *Incident) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Incident) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CreateIncidentRequest struct {
	// The incident reported by a user.
	Incident         *Incident `protobuf:"bytes,1,opt,name=incident" json:"incident,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateIncidentRequest) Reset()                    { *m = CreateIncidentRequest{} }
func (m *CreateIncidentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateIncidentRequest) ProtoMessage()               {}
func (*CreateIncidentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateIncidentRequest) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

type CreateIncidentResponse struct {
	// error is empty in case the request was succesful.
	Error            *string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateIncidentResponse) Reset()                    { *m = CreateIncidentResponse{} }
func (m *CreateIncidentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateIncidentResponse) ProtoMessage()               {}
func (*CreateIncidentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateIncidentResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type ListIncidentstRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListIncidentstRequest) Reset()                    { *m = ListIncidentstRequest{} }
func (m *ListIncidentstRequest) String() string            { return proto.CompactTextString(m) }
func (*ListIncidentstRequest) ProtoMessage()               {}
func (*ListIncidentstRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListIncidentsResponse struct {
	// List of all the incidents in the database.
	// TODO(villavieja): Pending to add a filter.
	Incident         []*Incident `protobuf:"bytes,1,rep,name=incident" json:"incident,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ListIncidentsResponse) Reset()                    { *m = ListIncidentsResponse{} }
func (m *ListIncidentsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListIncidentsResponse) ProtoMessage()               {}
func (*ListIncidentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListIncidentsResponse) GetIncident() []*Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

func init() {
	proto.RegisterType((*Incident)(nil), "madridmas_proto.Incident")
	proto.RegisterType((*CreateIncidentRequest)(nil), "madridmas_proto.CreateIncidentRequest")
	proto.RegisterType((*CreateIncidentResponse)(nil), "madridmas_proto.CreateIncidentResponse")
	proto.RegisterType((*ListIncidentstRequest)(nil), "madridmas_proto.ListIncidentstRequest")
	proto.RegisterType((*ListIncidentsResponse)(nil), "madridmas_proto.ListIncidentsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MadridMas service

type MadridMasClient interface {
	// A simple RPC.
	//
	// Create in incident to the server.
	//
	CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*CreateIncidentResponse, error)
	ListIncidents(ctx context.Context, in *ListIncidentstRequest, opts ...grpc.CallOption) (*ListIncidentsResponse, error)
}

type madridMasClient struct {
	cc *grpc.ClientConn
}

func NewMadridMasClient(cc *grpc.ClientConn) MadridMasClient {
	return &madridMasClient{cc}
}

func (c *madridMasClient) CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*CreateIncidentResponse, error) {
	out := new(CreateIncidentResponse)
	err := grpc.Invoke(ctx, "/madridmas_proto.MadridMas/CreateIncident", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *madridMasClient) ListIncidents(ctx context.Context, in *ListIncidentstRequest, opts ...grpc.CallOption) (*ListIncidentsResponse, error) {
	out := new(ListIncidentsResponse)
	err := grpc.Invoke(ctx, "/madridmas_proto.MadridMas/ListIncidents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MadridMas service

type MadridMasServer interface {
	// A simple RPC.
	//
	// Create in incident to the server.
	//
	CreateIncident(context.Context, *CreateIncidentRequest) (*CreateIncidentResponse, error)
	ListIncidents(context.Context, *ListIncidentstRequest) (*ListIncidentsResponse, error)
}

func RegisterMadridMasServer(s *grpc.Server, srv MadridMasServer) {
	s.RegisterService(&_MadridMas_serviceDesc, srv)
}

func _MadridMas_CreateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MadridMasServer).CreateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/madridmas_proto.MadridMas/CreateIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MadridMasServer).CreateIncident(ctx, req.(*CreateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MadridMas_ListIncidents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIncidentstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MadridMasServer).ListIncidents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/madridmas_proto.MadridMas/ListIncidents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MadridMasServer).ListIncidents(ctx, req.(*ListIncidentstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MadridMas_serviceDesc = grpc.ServiceDesc{
	ServiceName: "madridmas_proto.MadridMas",
	HandlerType: (*MadridMasServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIncident",
			Handler:    _MadridMas_CreateIncident_Handler,
		},
		{
			MethodName: "ListIncidents",
			Handler:    _MadridMas_ListIncidents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "madridmas.proto",
}

func init() { proto.RegisterFile("madridmas.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x5d, 0xab, 0x90, 0x4c, 0xb1, 0xc2, 0x62, 0x35, 0x06, 0x0f, 0x21, 0x07, 0xed, 0x69,
	0x0f, 0x05, 0x5f, 0xa0, 0x9e, 0x04, 0x2b, 0x25, 0x2f, 0x20, 0x4b, 0x32, 0x94, 0x85, 0x24, 0x1b,
	0x77, 0xa7, 0xe0, 0xc1, 0xb7, 0xf4, 0x85, 0xa4, 0x1b, 0xb3, 0x31, 0x35, 0x50, 0x8f, 0xf3, 0xff,
	0xff, 0xfe, 0xf3, 0xcd, 0xc2, 0x65, 0x25, 0x0b, 0xa3, 0x8a, 0x4a, 0x5a, 0xd1, 0x18, 0x4d, 0x9a,
	0xf7, 0xc2, 0x9b, 0x13, 0xd2, 0x4f, 0x08, 0x9e, 0xeb, 0x5c, 0x15, 0x58, 0x13, 0x8f, 0x21, 0x28,
	0x25, 0x29, 0xda, 0x15, 0x18, 0xb1, 0x84, 0x2d, 0x58, 0xe6, 0x67, 0x7e, 0x07, 0x61, 0xa9, 0xeb,
	0x6d, 0x6b, 0x9e, 0x3a, 0xb3, 0x17, 0xf8, 0x15, 0x9c, 0x93, 0xa2, 0x12, 0xa3, 0x49, 0xc2, 0x16,
	0x61, 0xd6, 0x0e, 0x3c, 0x81, 0x69, 0x81, 0x36, 0x37, 0xaa, 0x21, 0xa5, 0xeb, 0xe8, 0xcc, 0x79,
	0xbf, 0xa5, 0xf4, 0x15, 0xe6, 0x4f, 0x06, 0x25, 0x61, 0xc7, 0x90, 0xe1, 0xfb, 0x0e, 0x2d, 0xf1,
	0x47, 0x08, 0xd4, 0x8f, 0xe4, 0x50, 0xa6, 0xcb, 0x5b, 0x71, 0x80, 0x2e, 0xfc, 0x1b, 0x1f, 0x4d,
	0x05, 0x5c, 0x1f, 0xf6, 0xd9, 0x46, 0xd7, 0xd6, 0x11, 0xa2, 0x31, 0xda, 0xb8, 0xb6, 0x30, 0x6b,
	0x87, 0xf4, 0x06, 0xe6, 0x2f, 0xca, 0x52, 0x97, 0xb6, 0xdd, 0xfe, 0x3d, 0xd8, 0xc0, 0xf0, 0x3d,
	0x43, 0xb0, 0xc9, 0x3f, 0xc1, 0x96, 0x5f, 0x0c, 0xc2, 0xb5, 0x8b, 0xad, 0xa5, 0xe5, 0x39, 0xcc,
	0x86, 0x98, 0xfc, 0xfe, 0x4f, 0xc9, 0xe8, 0xbf, 0xc4, 0x0f, 0x47, 0x73, 0x2d, 0x67, 0x7a, 0xc2,
	0x25, 0x5c, 0x0c, 0x4e, 0x18, 0xd9, 0x31, 0x7a, 0x7b, 0x7c, 0x24, 0xd7, 0xaf, 0x58, 0x09, 0x88,
	0x95, 0x16, 0x5b, 0xd3, 0xe4, 0x02, 0x3f, 0x64, 0xd5, 0x94, 0x68, 0xfb, 0xb7, 0xab, 0x99, 0x3f,
	0x78, 0xb3, 0x6f, 0xd9, 0xb0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x35, 0x1d, 0xa2, 0x8f,
	0x02, 0x00, 0x00,
}
